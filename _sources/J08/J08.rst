Додавање нове врсте или колоне табели
===========================================

Понекад је важно да вредности које смо израчунали на основу података у табели (на пример, просеке оцена по ученицима) и сачувамо у табели. Ако табела нема за то предвиђену колону или врсту лако је можемо додати!

Вратимо се поново на пример са оценама ученика кога смо видели на раније:

.. ipython::

   In [1]: import pandas as pd
      ...: razred = [["Ana",     5, 3, 5, 2, 4, 5],
      ...:           ["Bojan",   5, 5, 5, 5, 5, 5],
      ...:           ["Vlada",   4, 5, 3, 4, 5, 4],
      ...:           ["Gordana", 5, 5, 5, 5, 5, 5],
      ...:           ["Dejan",   3, 4, 2, 3, 3, 4],
      ...:           ["Đorđe",   4, 5, 3, 4, 5, 4],
      ...:           ["Elena",   3, 3, 3, 4, 2, 3],
      ...:           ["Žaklina", 5, 5, 4, 5, 4, 5],
      ...:           ["Zoran",   4, 5, 4, 4, 3, 5],
      ...:           ["Ivana",   2, 2, 2, 2, 2, 5],
      ...:           ["Jasna",   3, 4, 5, 4, 5, 5]]
      ...: ocene = pd.DataFrame(razred)
      ...: ocene.columns=["Ime", "Informatika", "Engleski", "Matematika", "Fizika", "Hemija", "Likovno"]
      ...: ocene1 = ocene.set_index("Ime")
      ...: ocene1

Овде смо прво увезли библиотеку *pandas* са скраћеним именом "pd", од листе података смо направили табелу, дали колонама имена и индексирали смо табелу по имену ученика.

Као што смо раније видели, лако можемо да израчунамо просек оцена сваког ученика и да те податке испишемо. Међутим, ако желимо да просеке запамтимо у табели, треба нам нова колона. Нова колона се табели додаје тако што се просто напише:

.. ipython::

   In [1]: ocene1["ProsekUc"] = 0.0

Ако покушамо да непостојећој колони додамо неку вредност, систем ће сам на крај табеле додати нову колону и попунити је наведеним вредностима:

.. ipython::

   In [1]: ocene1

Сада ћемо у једном *for*-циклусу да прођемо кроз индексну колону табеле и да за сваки ред табеле израчунамо просек бројева уписаних у колоне "Informatika"--"Likovno". (Не смемо да рачунамо просек целог реда, јер редови сада садрже и колону "ProsekUc" која не сме да се укључи у рачун просека!)

.. ipython::

   In [1]: for ucenik in ocene1.index:
      ...:     ocene1.loc[ucenik, "ProsekUc"] = ocene1.loc[ucenik, "Informatika":"Likovno"].mean()

Ево како изгледа нова табела:

.. ipython::

   In [1]: ocene1

Да бисмо израчунали просечну оцену за сваки предмет, додаћемо нову врсту:

.. ipython::

   In [1]: ocene1.loc["ProsekPr"] = 0.0
      ...: ocene1

.. infonote::

       Овде треба да застанемо за тренутак и да се подсетимо да се запис облика ``ocene1["ProsekUc"]`` односи на колоне табеле тако да ће наредба
       
       .. code-block:: python
       
           ocene1["ProsekUc"] = 0.0
       
       
       додати нову колону попуњену нулама, док се запис ``ocene1.loc["ProsekPr"]`` односи на врсте табеле, па ће наредба
       
       .. code-block:: python
       
           ocene1.loc["ProsekPr"] = 0.0
       
       додати нову врсту попуњену нулама (што се и десило у примеру).


.. ipython::

   In [1]: for predmet in ocene1.columns:
      ...:     ocene1.loc["ProsekPr", predmet] = ocene1.loc["Ana":"Jasna", predmet].mean()
      ...: ocene1

Пример
-------------

На следећем линку:

`https://petljamediastorage.blob.core.windows.net/root/Media/Default/Kursevi/informatika_VIII/podaci/StanovnistvoSrbije2017.csv <https://petljamediastorage.blob.core.windows.net/root/Media/Default/Kursevi/informatika_VIII/podaci/StanovnistvoSrbije2017.csv>`_

се налази датотека *StanovnistvoSrbije2017.csv* која садржи процену броја становника Републике Србије по годинама на дан 31.12.2017. Први ред табеле представља заглавље табеле које нам каже да табела има три колоне (Старост, Мушко, Женско). Прво ћемо учитати табелу и индексирати је колоном "Старост":

.. ipython::

   In [1]: stanovnistvo = pd.read_csv("https://petljamediastorage.blob.core.windows.net/root/Media/Default/Kursevi/informatika_VIII/podaci/StanovnistvoSrbije2017.csv")
      ...: stanovnistvo1 = stanovnistvo.set_index("Старост")

Сада ћемо урадити малу демографску анализу: израчунаћемо однос броја мушкараца и жена по годинама старости и приказаћемо податке линијским дијаграмом.

Прво ћемо табели додати нову колону "М/Ж" и у ту колону уписати израчунате односе:

.. ipython::

   In [1]: stanovnistvo1["М/Ж"] = 0.0
      ...: for i in stanovnistvo1.index:
      ...:     stanovnistvo1.loc[i, "М/Ж"] = stanovnistvo1.loc[i, "Мушко"] / stanovnistvo1.loc[i, "Женско"]

Ево првих неколико редова табеле:

.. ipython::

   In [1]: stanovnistvo1.head(10)

Потом ћемо приказати дијаграм коме ћемо додати линију на висини 1.0 да бисмо лакше уочили у ком тренутку број мушкараца постаје мањи од броја жена:

.. ipython::
   :okwarning:

   @savefig J08slika1.png
   In [1]: import matplotlib.pyplot as plt
      ...: plt.figure(figsize=(20,5))
      ...: plt.plot(stanovnistvo1.index, stanovnistvo1["М/Ж"])
      ...: plt.plot(stanovnistvo1.index, [1.0] * len(stanovnistvo1.index))
      ...: plt.title("Однос броја мушких и женских држављана Србије по годинама старости\nпрема проценама броја становника на дан 31.12.2017")
      ...: plt.show()

.. ipython::
   :suppress:

   In [1]: plt.close()


