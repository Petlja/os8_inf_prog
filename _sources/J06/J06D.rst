Учитавање података из локалних датотека и удаљених ресурса
====================================================================


Видели смо у претходним примерима да се најмукотрпнији посао обраде података састоји у томе да се подаци унесу у табелу.
То је досадан посао који се често састоји у томе да се подаци просто прекуцају.
Табеле са којима смо се сретали су зато биле веома мале. Модерна обрада података се, међутим, све више усмерава на
анализу *огромних* количина података (енгл. *big data*) и ту прекуцавање података не долази у обзир.

Подаци се данас углавном прикупљају аутоматски, и програми за прикупљање података генеришу велике табеле података које
после треба обрађивати. Постоје разни формати за табеларно представљање података, а најједноставнији од њих се зове *CSV*,
(од енгл. *comma separated values* што значи "вредности раздвојене зарезима").

*CSV* датотека је текстуална датотека у којој редови одговарају редовима табеле, а подаци унутар истог реда су
раздвојени зарезима. На пример, датотека *Top25YouTubers.csv*
садржи податке о о 25 најпопуларнијих Јутјубера према броју претплатника на дан 1.7.2019.
Она изгледа овако:

.. code-block:: text

    RANK,GRADE,NAME,VIDEOS,SUBSCRIBERS,VIEWES
    1,A++,T-Series,13629,105783888,76945588449
    2,A,PewDiePie,3898,97853589,22298927681
    3,A+,5-Minute Crafts,3341,58629572,14860695079
    4,A++,Cocomelon - Nursery Rhymes,441,53163816,33519273951
    ...
    25,A,TheEllenShow,10542,33362512,16519572219

Први ред табеле представља заглавље табеле које нам каже да табела има шест колона
(RANK, GRADE, NAME, VIDEOS, SUBSCRIBERS, VIEWES). Врста

.. code-block:: text

    4,A++,Cocomelon - Nursery Rhymes,441,53163816,33519273951


значи да је на дан 1.7.2019. четврти по реду био Јутјуб канал са Јутјуб рангом А++ који се зове "Cocomelon - Nursery Rhymes" који је објавио укупно 441 видео на Јутјубу, који има 53.163.816 претплатника и 33.519.273.951 прегледа.

Библиотека ``pandas`` има функцију ``read_csv`` која учитава *CSV* датотеку и од ње прави табелу типа *DataFrame*.
Уколико се датотека налази на локалној машини, у фолдеру у коме се налази и Џупитер радна свеска из које јој приступамо, онда
се датотека учитава на следећи начин:

.. code-block:: python

   import pandas as pd
   Top25 = pd.read_csv("Top25YouTubers.csv")

Учитавање података из локалних датотека је илустровано у следећем кратком видеу:

.. ytpopup:: bbPo9Dujtc8
   :width: 735
   :height: 415
   :align: center

а провежбаћемо га на крају ове лекције, у склопу задатака које треба урадити у Џупитер радној свесци.

С друге стране, иста та датотека се налази и на следећем линку:

`https://petljamediastorage.blob.core.windows.net/root/Media/Default/Kursevi/informatika_VIII/podaci/Top25YouTubers.csv <https://petljamediastorage.blob.core.windows.net/root/Media/Default/Kursevi/informatika_VIII/podaci/Top25YouTubers.csv>`_

Библиотека ``pandas`` омогућује да се подаци преузму и са удаљених ресурса без потребе да се они прво пребаце на локалну
машину. Да бисмо приступили податку који се налази на некој другој машини потребно је да обе машине имају приступ Интернету и да знамо тачну локацију податка на удаљеној машини. Тачна локација било ког ресурса на Интернету је описана његовим *URL*-ом (од енгл. *Universal Resource Locator*, што значи "Универзални локатор ресурса").

Ево примера:

.. ipython::

   In [1]: import pandas as pd
      ...: Top25 = pd.read_csv("https://petljamediastorage.blob.core.windows.net/root/Media/Default/Kursevi/informatika_VIII/podaci/Top25YouTubers.csv")

Прикажимо првих неколико редова ове табеле. Функција ``head(N)`` приказује првих N редова табеле (енгл. *head* значи "глава"). Ако функцију позовемо без броја она ће приказати првих пет редова:

.. ipython::

   In [1]: Top25.head()


.. ipython::

   In [1]: Top25.head(10)

Функција ``tail(N)`` приказује последњих N редова табеле, односно, последњих пет редова ако је позвемо без аргумента (енгл. *tail* значи "реп"):

.. ipython::

   In [1]: Top25.tail()


.. ipython::

   In [1]: Top25.tail(7)

Прикажимо податке о броју претплатника стубичастим дијаграмом:

.. ipython::
   :okwarning:

   @savefig J06slika3.png
   In [1]: plt.figure(figsize=(15,10))
      ...: plt.bar(Top25["NAME"], Top25["SUBSCRIBERS"])
      ...: plt.title("Top 25 YouTube kanala prema broju pretplatnika")
      ...: plt.show()

.. ipython::
   :suppress:

   In [1]: plt.close()

Пошто су имена канала веома дугачка на хоризонталној оси се ништа не види. Зато ћемо уместо функције ``bar`` позвати функцију ``barh`` која ради исти посао, али стубиће исцртава хоризонтално:

.. ipython::
   :okwarning:

   @savefig J06slika4.png
   In [1]: plt.figure(figsize=(10,10))
      ...: plt.barh(Top25["NAME"], Top25["SUBSCRIBERS"])
      ...: plt.title("Top 25 YouTube kanala prema broju pretplatnika")
      ...: plt.show()

.. ipython::
   :suppress:

   In [1]: plt.close()


Пример.
''''''''

На адреси

.. code-block:: text

    https://raw.githubusercontent.com/cs109/2014_data/master/countries.csv

се налази јавно доступан списак свих држава на свету. Ову табелу можемо лако учитати наредбом ``read_csv``:

.. ipython::

   In [1]: drzave = pd.read_csv("https://raw.githubusercontent.com/cs109/2014_data/master/countries.csv")
      ...: drzave.head(10)

Помоћу наредбе ``read_html`` може се прочитати и табела директно из *HTML* кода неке веб странице. Рецимо, следећа наредба чита списак свих федералних јединица Сједињених Америчких Држава са одговарајуће странице Википедије:

.. ipython::

   In [1]: US = pd.read_html("https://simple.wikipedia.org/wiki/List_of_U.S._states", header=[0,1])[0]

На веб страни коју читамо може бити више табела и зато функција ``read_html`` враћа *листу табела*. Табела коју желимо да видимо је прва на наведеној страни и зато иза наредбе следи конструкт ``[0]``. Аргумент ``header=[0,1]`` значи да прве две врсте треба узети за заглавље табеле. Ево како изгледа табела:

.. ipython::

   In [1]: US.head()

Ево и кратке видео илустрације:

.. ytpopup:: SivimRYskH0
   :width: 735
   :height: 415
   :align: center


